<?php
/**
 * Page Editor Admin Screen
 *
 * Handles enqueuing React app and rendering editor interface.
 *
 * @package SEOGenerator
 */

namespace SEOGenerator\Admin;

defined( 'ABSPATH' ) || exit;

/**
 * Page Editor class.
 *
 * Manages the React-based page editor interface for SEO pages.
 */
class PageEditor {
	/**
	 * Register hooks.
	 *
	 * @return void
	 */
	public function register(): void {
		add_action( 'admin_enqueue_scripts', array( $this, 'enqueueScripts' ) );
		add_action( 'edit_form_after_title', array( $this, 'renderEditorRoot' ) );
	}

	/**
	 * Enqueue React app scripts and styles.
	 *
	 * @param string $hook Current admin page hook.
	 * @return void
	 */
	public function enqueueScripts( string $hook ): void {
		// Only load on seo-page edit screens.
		if ( 'post.php' !== $hook && 'post-new.php' !== $hook ) {
			return;
		}

		// Check post type from global $post or query string.
		$post_type = '';
		global $post;

		if ( $post ) {
			$post_type = $post->post_type;
		} elseif ( isset( $_GET['post_type'] ) ) {
			$post_type = sanitize_text_field( $_GET['post_type'] );
		}

		if ( 'seo-page' !== $post_type ) {
			return;
		}

		// Enqueue WordPress media library.
		\wp_enqueue_media();

		// Load asset file generated by webpack.
		$asset_file = SEO_GENERATOR_PLUGIN_DIR . 'assets/js/build/index.asset.php';

		if ( ! file_exists( $asset_file ) ) {
			return;
		}

		$asset = require $asset_file;

		// Enqueue main React app.
		wp_enqueue_script(
			'seo-generator-admin',
			SEO_GENERATOR_PLUGIN_URL . 'assets/js/build/index.js',
			$asset['dependencies'] ?? array(),
			$asset['version'] ?? '1.0.0',
			true
		);

		// Enqueue WordPress components styles.
		wp_enqueue_style( 'wp-components' );

		// Enqueue custom admin block styles.
		wp_enqueue_style(
			'seo-generator-admin-blocks',
			SEO_GENERATOR_PLUGIN_URL . 'assets/css/admin-blocks.css',
			array( 'wp-components' ),
			$asset['version'] ?? '1.0.0'
		);

		// Localize script with necessary data.
		wp_localize_script(
			'seo-generator-admin',
			'seoGeneratorData',
			array(
				'postId'    => $post->ID,
				'restUrl'   => rest_url( 'seo-generator/v1' ),
				'restNonce' => wp_create_nonce( 'wp_rest' ),
				'ajaxUrl'   => admin_url( 'admin-ajax.php' ),
				'nonce'     => wp_create_nonce( 'seo_generator_nonce' ),
			)
		);
	}

	/**
	 * Render React root div for page editor.
	 *
	 * @param WP_Post $post Current post object.
	 * @return void
	 */
	public function renderEditorRoot( $post ): void {
		// Debug: Always output something to verify hook is firing
		echo '<!-- PageEditor::renderEditorRoot called -->';

		// Check post type from $post object or query string.
		$post_type = '';

		if ( $post && isset( $post->post_type ) ) {
			$post_type = $post->post_type;
			echo "<!-- Post type from object: {$post_type} -->";
		} elseif ( isset( $_GET['post_type'] ) ) {
			$post_type = sanitize_text_field( $_GET['post_type'] );
			echo "<!-- Post type from GET: {$post_type} -->";
		} else {
			echo "<!-- No post type found -->";
		}

		if ( 'seo-page' !== $post_type ) {
			echo "<!-- Not seo-page, returning -->";
			return;
		}

		?>
		<div id="seo-generator-page-editor" class="seo-generator-root"></div>
		<?php
	}
}
